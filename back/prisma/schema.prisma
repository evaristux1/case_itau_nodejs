// prisma/schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Customer {
    id       Int    @id @default(autoincrement())
    name     String
    email    String
    document String

    balanceCents Int @default(0)

    passwordHash String @map("password_hash")
    version      Int    @default(0)
    status       String @default("ACTIVE")

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @updatedAt @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    auditLogs     AuditLog[]
    ledgerEntries LedgerEntry[]

    @@unique([id, version])
    @@index([email])
    @@index([document])
    @@map("customers")
}

model AuditLog {
    id         String @id @default(uuid())
    customerId Int?   @map("customer_id")
    action     String
    entity     String
    entityId   String @map("entity_id")

    oldValue String? @map("old_value")
    newValue String? @map("new_value")

    userId    String?  @map("user_id")
    ipAddress String?  @map("ip_address")
    userAgent String?  @map("user_agent")
    createdAt DateTime @default(now()) @map("created_at")

    customer Customer? @relation(fields: [customerId], references: [id])

    @@index([customerId])
    @@index([action])
    @@map("audit_logs")
}

model LedgerEntry {
    id         String @id @default(uuid())
    customerId Int    @map("customer_id")

    deltaCents     Int
    type           String
    idempotencyKey String? @unique @map("idempotency_key")

    balanceBeforeCents Int? @map("balance_before_cents")
    balanceAfterCents  Int? @map("balance_after_cents")

    description   String?
    metadata      String?
    transactionId String? @map("transaction_id")

    createdAt DateTime @default(now()) @map("created_at")

    customer Customer @relation(fields: [customerId], references: [id])

    @@index([customerId])
    @@index([transactionId])
    @@map("ledger_entries")
}
